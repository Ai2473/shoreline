package net.shoreline.client.impl.module.exploit;

import net.minecraft.network.packet.c2s.play.PlayPongC2SPacket;
import net.minecraft.network.packet.s2c.play.EntitiesDestroyS2CPacket;
import net.minecraft.util.math.Vec3d;
import net.shoreline.client.api.event.listener.EventListener;
import net.shoreline.client.api.module.ModuleCategory;
import net.shoreline.client.api.module.ToggleModule;
import net.shoreline.client.impl.event.TickEvent;
import net.shoreline.client.impl.event.entity.projectile.RemoveFireworkEvent;
import net.shoreline.client.impl.event.item.FireworkUseEvent;
import net.shoreline.client.impl.event.network.PacketEvent;
import net.shoreline.client.init.Managers;

import java.util.ArrayList;
import java.util.List;

/**
 *
 *
 * @author Shoreline
 * @since 1.0
 */
public class ExtendedFireworkModule extends ToggleModule
{
    private Vec3d pos;
    private boolean extendFirework;
    private int fireworkId;
    //
    private List<PlayPongC2SPacket> packets = new ArrayList<>();

    /**
     *
     */
    public ExtendedFireworkModule()
    {
        super("ExtendedFirework", "Extends firework duration",
                ModuleCategory.EXPLOITS);
    }

    @EventListener
    public void onFireworkUse(FireworkUseEvent event)
    {
        if (mc.player.isFallFlying())
        {
            extendFirework = true;
            pos = mc.player.getPos();
        }
    }

    @EventListener
    public void onRemoveFirework(RemoveFireworkEvent event)
    {
        if (extendFirework && mc.player.isFallFlying())
        {
            event.cancel();
            fireworkId = event.getEntityId();
        }
    }

    @EventListener
    public void onTick(TickEvent event)
    {
        if (pos != null && mc.player.squaredDistanceTo(pos) > 10000)
        {
            extendFirework = false;
            for (PlayPongC2SPacket packet : packets)
            {
                Managers.NETWORK.sendPacket(packet);
            }
            packets.clear();
        }
    }

    @EventListener
    public void onPacketOutbound(PacketEvent.Outbound event)
    {
        if (mc.player == null || mc.world == null)
        {
            return;
        }
        if (event.getPacket() instanceof PlayPongC2SPacket packet
                && extendFirework && mc.player.isFallFlying())
        {
            packets.add(packet);
            event.cancel();
        }
    }

    @EventListener
    public void onPacketInbound(PacketEvent.Inbound event)
    {
        if (mc.player == null || mc.world == null)
        {
            return;
        }
        if (event.getPacket() instanceof EntitiesDestroyS2CPacket packet
                && extendFirework && mc.player.isFallFlying())
        {
            for (int id : packet.getEntityIds())
            {
                if (id == fireworkId)
                {
                    event.cancel();
                    return;
                }
            }
        }
    }
}
