package net.shoreline.client.impl.module.exploit;

import net.shoreline.client.api.config.Config;
import net.shoreline.client.api.config.setting.EnumConfig;
import net.shoreline.client.api.event.EventStage;
import net.shoreline.client.api.event.listener.EventListener;
import net.shoreline.client.api.module.ModuleCategory;
import net.shoreline.client.api.module.ToggleModule;
import net.shoreline.client.impl.event.config.ConfigUpdateEvent;
import net.shoreline.client.util.player.PlayerUtil;
import net.minecraft.util.Hand;
import net.shoreline.client.util.Globals;

/**
 *
 *
 * @author linus
 * @since 1.0
 */
public class SwingModule extends ToggleModule
{
    //
    Config<SwingHand> swingHandConfig = new EnumConfig<>("Hand", "The player" +
            "swinging hand", SwingHand.MAINHAND, SwingHand.values());
    //
    private Hand hand;

    /**
     *
     */
    public SwingModule()
    {
        super("Swing", "Modifies the swinging hand", ModuleCategory.EXPLOITS);
    }

    /**
     *
     *
     */
    @Override
    public void onEnable()
    {
        if (Globals.mc.player != null)
        {
            updateSwingHand(swingHandConfig.getValue());
        }
    }

    /**
     *
     *
     * @param event
     */
    @EventListener
    public void onConfigUpdate(ConfigUpdateEvent event)
    {
        if (Globals.mc.player != null && event.getConfig() == swingHandConfig
                && event.getStage() == EventStage.POST)
        {
            updateSwingHand(swingHandConfig.getValue());
        }
    }

    /**
     *
     *
     */
    @Override
    public void onDisable()
    {
        if (Globals.mc.player != null)
        {
            Globals.mc.player.preferredHand = Hand.MAIN_HAND;
        }
    }

    /**
     *
     *
     * @param swingHand
     */
    private void updateSwingHand(final SwingHand swingHand)
    {
        hand = switch (swingHand)
        {
            case MAINHAND -> Hand.MAIN_HAND;
            case OFFHAND -> Hand.OFF_HAND;
            case SWAP ->
            {
                if (!Globals.mc.player.handSwinging
                        || Globals.mc.player.handSwingTicks >= PlayerUtil.getHandSwingDuration() / 2
                        || Globals.mc.player.handSwingTicks < 0)
                {
                    yield hand != Hand.MAIN_HAND ? Hand.MAIN_HAND :
                            Hand.OFF_HAND;
                }
                yield hand;
            }
            case PACKET -> null;
        };
        //
        if (hand != null)
        {
            Globals.mc.player.preferredHand = hand;
        }
    }

    /**
     *
     *
     * @return
     */
    public Hand getSwingHand()
    {
        if (hand != null)
        {
            return hand;
        }
        return Hand.MAIN_HAND;
    }

    private enum SwingHand
    {
        MAINHAND,
        OFFHAND,
        SWAP,
        PACKET
    }
}
