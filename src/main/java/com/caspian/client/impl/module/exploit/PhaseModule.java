package com.caspian.client.impl.module.exploit;

import com.caspian.client.api.config.Config;
import com.caspian.client.api.config.setting.BooleanConfig;
import com.caspian.client.api.config.setting.EnumConfig;
import com.caspian.client.api.config.setting.NumberConfig;
import com.caspian.client.api.event.EventStage;
import com.caspian.client.api.event.listener.EventListener;
import com.caspian.client.api.module.ModuleCategory;
import com.caspian.client.api.module.ToggleModule;
import com.caspian.client.impl.event.entity.player.PlayerMoveEvent;
import com.caspian.client.impl.event.network.MovementPacketsEvent;
import com.caspian.client.impl.event.network.PushOutOfBlocksEvent;
import com.caspian.client.init.Managers;
import net.minecraft.entity.vehicle.BoatEntity;

/**
 *
 *
 * @author linus
 * @since 1.0
 */
public class PhaseModule extends ToggleModule
{
    //
    Config<Float> blocksConfig = new NumberConfig<>("Blocks", "The blocks " +
            "distance to phase clip", 0.001f, 0.003f, 10.0f);
    Config<Float> distanceConfig = new NumberConfig<>("Distance", "The " +
            "distance to phase", 0.0f, 0.2f, 10.0f);
    Config<PhaseMode> modeConfig = new EnumConfig<>("Mode", "The phase mode " +
            "for clipping into blocks", PhaseMode.BOAT, PhaseMode.values());
    Config<Boolean> autoClipConfig = new BooleanConfig("AutoClip",
            "Automatically clips into the block", true);

    /**
     *
     */
    public PhaseModule()
    {
        super("Phase", "Allows player to phase through solid blocks",
                ModuleCategory.EXPLOITS);
    }

    /**
     *
     * @param event
     */
    @EventListener
    public void onMovementPackets(MovementPacketsEvent event)
    {
        if (event.getStage() != EventStage.PRE)
        {
            return;
        }
        //
        switch (modeConfig.getValue())
        {
            case BOAT ->
            {
                if (mc.player.getVehicle() instanceof BoatEntity)
                {
                    mc.player.noClip = true;
                    Managers.MOVEMENT.setMotionY(0.0);
                    mc.player.setOnGround(false);
                    mc.player.getAbilities().flying = false;
                }
            }
            case SAND ->
            {

            }
        }
    }

    /**
     *
     * @param event
     */
    @EventListener
    public void onPlayerMove(PlayerMoveEvent event)
    {
        if (mc.player.getVehicle() instanceof BoatEntity boat
                && modeConfig.getValue() == PhaseMode.BOAT)
        {
            // boat.setBoundingBox();
        }
    }

    /**
     *
     * @param event
     */
    @EventListener
    public void onPushOutOfBlocks(PushOutOfBlocksEvent event)
    {
        event.cancel();
    }

    public enum PhaseMode
    {
        BOAT,
        SAND,
        DOOR
    }
}
