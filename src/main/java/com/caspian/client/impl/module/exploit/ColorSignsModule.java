package com.caspian.client.impl.module.exploit;

import com.caspian.client.api.config.Config;
import com.caspian.client.api.config.setting.EnumConfig;
import com.caspian.client.api.event.listener.EventListener;
import com.caspian.client.api.module.ModuleCategory;
import com.caspian.client.api.module.ToggleModule;
import com.caspian.client.impl.event.network.PacketEvent;
import com.caspian.client.init.Managers;
import net.minecraft.network.packet.c2s.play.UpdateSignC2SPacket;

/**
 *
 *
 * @author linus
 * @since 1.0
 */
public class ColorSignsModule extends ToggleModule
{
    //
    Config<SignMode> modeConfig = new EnumConfig<>("Mode", "The mode for " +
            "replacing colors in signs", SignMode.VANILLA, SignMode.values());

    /**
     *
     */
    public ColorSignsModule()
    {
        super("ColorSigns", "Allow colors in signs (Use & before color codes)",
                ModuleCategory.EXPLOITS);
    }

    /**
     *
     * @param event
     */
    @EventListener
    public void onPacketOutbound(PacketEvent.Outbound event)
    {
        if (event.getPacket() instanceof UpdateSignC2SPacket packet
                && !event.isClientPacket())
        {
            String[] signText = packet.getText();
            for (int i = 0; i < signText.length; i++)
            {
                signText[i] = signText[i].replace("&", switch (modeConfig.getValue())
                        {
                            case VANILLA -> "§§0";
                            case NORMAL -> "§§§00";
                            case STRICT -> "§§$1$1";
                        });
            }
            event.cancel();
            Managers.NETWORK.sendPacket(new UpdateSignC2SPacket(packet.getPos(),
                    signText[0], signText[1], signText[2], signText[3]));
        }
    }

    public enum SignMode
    {
        VANILLA,
        NORMAL,
        STRICT
    }
}
